---
accessories:
  db:
    directories:
    - data:/var/lib/postgresql/data
    env:
      clear:
        POSTGRES_DB: code_production
        POSTGRES_USER: code
      secret:
      - POSTGRES_PASSWORD
    host: 146.190.28.38
    image: postgres:16.1
    port: 5432
  redis:
    cmd: redis-server --requirepass <%= File.read(".env.staging")[/REDIS_PASSWORD="(.*)"/,
      1] %>
    directories:
    - data:/data
    host: 146.190.28.38
    image: redis:7
    port: 6379
env:
  secret:
  - BASE_URL
  - DATABASE_URL
  - HOST
  - HOSTS
  - POSTGRES_PASSWORD
  - RAILS_MASTER_KEY
  - REDIS_URL
healthcheck:
  max_attempts: 20
image: dorianmariecom/code
registry:
  password:
  - KAMAL_REGISTRY_PASSWORD
  username:
  - KAMAL_REGISTRY_USERNAME
servers:
  jobs:
    cmd: bin/rake solid_queue:start
    hosts:
    - 146.190.28.38
  push:
    cmd: bin/rpush start -f
    hosts:
    - 146.190.28.38
  web:
    hosts:
    - 146.190.28.38
    labels:
      traefik.http.routers.code.rule: Host(`staging.codedorian.com`)
      traefik.http.routers.code_secure.entrypoints: websecure
      traefik.http.routers.code_secure.rule: Host(`staging.codedorian.com`)
      traefik.http.routers.code_secure.tls: true
      traefik.http.routers.code_secure.tls.certresolver: letsencrypt
service: code
traefik:
  args:
    certificatesResolvers.letsencrypt.acme.email: dorian@dorianmarie.com
    certificatesResolvers.letsencrypt.acme.httpchallenge: true
    certificatesResolvers.letsencrypt.acme.httpchallenge.entrypoint: web
    certificatesResolvers.letsencrypt.acme.storage: "/letsencrypt/acme.json"
    entryPoints.web.address: ":80"
    entryPoints.web.http.redirections.entryPoint.scheme: https
    entryPoints.web.http.redirections.entryPoint.to: websecure
    entryPoints.web.http.redirections.entrypoint.permanent: true
    entryPoints.websecure.address: ":443"
  options:
    publish:
    - 443:443
    volume:
    - "/letsencrypt/acme.json:/letsencrypt/acme.json"
