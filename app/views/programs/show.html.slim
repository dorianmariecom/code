- content_for(:title, @program.to_s)

= turbo_stream_from @program

.text-sm= t(".user")
.mb-5= link_to @program.user

.text-sm= t(".id")
.mb-5= @program.id

.text-sm= t(".created_at")
.mb-5= @program.created_at

.text-sm= t(".updated_at")
.mb-5= @program.updated_at

- if @program.prompt.present?
  .text-sm=> t(".prompt")
  pre.mt-0= @program.prompt

- if @program.input.present?
  .text-sm=> t(".input")
  pre.mt-0= @program.input

- if @program.next_at
  .text-sm= t(".next_at")
  .mb-5= @program.next_at

.text-sm= t(".scheduled")
.mb-5= @program.scheduled?

- if @program.scheduled?
  .p= button_to t(".unschedule"), [@program, :schedule], method: :delete, class: "bg-black text-white px-4 py-2 rounded cursor-pointer"
- elsif @program.next_at?
  .p= button_to t(".schedule"), [@program, :schedule], class: "bg-black text-white px-4 py-2 rounded cursor-pointer"

.p= button_to t(".evaluate"), [@program, :evaluate], class: "bg-black text-white px-4 py-2 rounded cursor-pointer"

= link_to t(".edit"), [:edit, @program]
= button_to t(".delete"), @program, method: :delete, class: "a text-red-600"

= render "shared/models", model: :execution, collection: @executions, parent: @program
= render "shared/models", model: :prompt, collection: @prompts, parent: @program
= render "shared/models", model: :schedule, collection: @schedules, parent: @program
