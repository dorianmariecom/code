- content_for(:title, @email_address.to_s)

= turbo_stream_from @email_address

.text-sm= t(".user")
.mb-5= link_to @email_address.user

.text-sm= t(".id")
.mb-5= @email_address.id

.text-sm= t(".created_at")
.mb-5= @email_address.created_at

.text-sm= t(".updated_at")
.mb-5= @email_address.updated_at

.text-sm= t(".primary")
.mb-5= @email_address.primary?

.text-sm= t(".verified")
.mb-5= @email_address.verified?

.text-sm=> t(".email_address")
.mb-5= mail_to @email_address.email_address

- if @email_address.not_verified?
  - if @email_address.verification_code_sent?
      = form_for @email_address, url: email_address_verification_code_path(id) do |f|
        = render "shared/field", f: f, field: :verification_code, type: :verification_code, value: verification_code_param, required: true, fake: fake_verification_codes(n: 6)
        p=> f.submit t(".verify"), class: "bg-black text-white px-4 py-2 rounded cursor-pointer"
      .p= button_to t(".cancel"), [@email_address, :verification_code], method: :delete, class: "a text-red-600"
  - else
    .p= button_to t(".send_verification_code"), [@email_address, :verification_code], class: "bg-black text-white rounded px-4 py-2 cursor-pointer"

- if can?(:update, @email_address)
  = link_to t(".edit"), [:edit, @email_address]
  = button_to t(".delete"), @email_address, method: :delete, class: "a text-red-600"
