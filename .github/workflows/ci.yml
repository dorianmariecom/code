name: CI
'on': push
jobs:
  brakeman:
    name: Brakeman
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: bin/brakeman -A -q --color
  bundler-audit:
    name: Bundler Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: bin/bundler-audit check --update
  importmap-audit:
    name: Importmap Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: bin/importmap audit
  importmap-outdated:
    name: Importmap Outdated
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: bin/importmap outdated
  rspec:
    name: RSpec
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      PGHOST: localhost
      PGUSER: postgres
      PGPASSWORD: password
      POSTGRES_HOST: localhost
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      RAILS_MASTER_KEY: ${{secrets.TEST_RAILS_MASTER_KEY}}
    services:
      postgres:
        image: postgres:latest
        ports: ["5432:5432"]
        env:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: password
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - uses: actions/setup-node@v4
        with:
          cache: "npm"
      - run: npm install --frozen-lockfile --immutable --ignore-engines
      - run: bin/rails db:create db:schema:load
      - run: bin/rails assets:precompile
      - run: bin/rspec
  rubocop:
    name: Rubocop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: bin/rubocop
  npm-audit:
    name: npm Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - run: npm audit
  deploy-staging:
    name: Deploy staging
    runs-on: ubuntu-latest
    needs:
      - brakeman
      - bundler-audit
      - importmap-audit
      - importmap-outdated
      - rspec
      - rubocop
      - npm-audit
    steps:
      - uses: actions/checkout@v4
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{secrets.STAGING_SSH_PRIVATE_KEY}}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{secrets.STAGING_KAMAL_REGISTRY_USERNAME}}
          password: ${{secrets.STAGING_KAMAL_REGISTRY_PASSWORD}}
      - uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{github.repository}}:${{github.sha}}
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: echo ${{secrets.STAGING_REDIS_PASSWORD}} > .env.staging
      - run: bin/kamal lock release --destination staging
        if: github.ref == 'refs/heads/main'
      - run: bin/kamal deploy --skip-push --destination staging
        env:
          KAMAL_REGISTRY_USERNAME: ${{secrets.STAGING_KAMAL_REGISTRY_USERNAME}}
          KAMAL_REGISTRY_PASSWORD: ${{secrets.STAGING_KAMAL_REGISTRY_PASSWORD}}
          RAILS_MASTER_KEY: ${{secrets.STAGING_RAILS_MASTER_KEY}}
          POSTGRES_PASSWORD: ${{secrets.STAGING_POSTGRES_PASSWORD}}
          DATABASE_URL: ${{secrets.STAGING_DATABASE_URL}}
        if: github.ref == 'refs/heads/main'
  deploy-production:
    name: Deploy production
    runs-on: ubuntu-latest
    needs:
      - brakeman
      - bundler-audit
      - importmap-audit
      - importmap-outdated
      - rspec
      - rubocop
      - npm-audit
    steps:
      - uses: actions/checkout@v4
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{secrets.PRODUCTION_SSH_PRIVATE_KEY}}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{secrets.PRODUCTION_KAMAL_REGISTRY_USERNAME}}
          password: ${{secrets.PRODUCTION_KAMAL_REGISTRY_PASSWORD}}
      - uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{github.repository}}:${{github.sha}}
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: echo ${{secrets.PRODUCTION_REDIS_PASSWORD}} > .env.prod
      - run: bin/kamal lock release --destination prod
        if: github.ref == 'refs/heads/main'
      - run: bin/kamal deploy --skip-push --destination prod
        env:
          KAMAL_REGISTRY_USERNAME: ${{secrets.PRODUCTION_KAMAL_REGISTRY_USERNAME}}
          KAMAL_REGISTRY_PASSWORD: ${{secrets.PRODUCTION_KAMAL_REGISTRY_PASSWORD}}
          RAILS_MASTER_KEY: ${{secrets.PRODUCTION_RAILS_MASTER_KEY}}
          POSTGRES_PASSWORD: ${{secrets.PRODUCTION_POSTGRES_PASSWORD}}
          DATABASE_URL: ${{secrets.PRODUCTION_DATABASE_URL}}
        if: github.ref == 'refs/heads/main'
